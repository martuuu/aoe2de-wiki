"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/civilizations/page",{

/***/ "(app-pages-browser)/./data/civilizations/index.ts":
/*!*************************************!*\
  !*** ./data/civilizations/index.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllCivilizations: () => (/* binding */ getAllCivilizations),\n/* harmony export */   getAvailableRegions: () => (/* binding */ getAvailableRegions),\n/* harmony export */   getCivilization: () => (/* binding */ getCivilization),\n/* harmony export */   getCivilizationsByRegion: () => (/* binding */ getCivilizationsByRegion)\n/* harmony export */ });\n/* harmony import */ var _civs_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./civs-data */ \"(app-pages-browser)/./data/civilizations/civs-data.ts\");\n/* harmony import */ var _civs_data2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./civs-data2 */ \"(app-pages-browser)/./data/civilizations/civs-data2.ts\");\n/* harmony import */ var _civs_data3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./civs-data3 */ \"(app-pages-browser)/./data/civilizations/civs-data3.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./data/civilizations/types.ts\");\n\n\n\n// Combinar todos los datos de civilizaciones\nconst allCivilizationsData = {\n    ..._civs_data__WEBPACK_IMPORTED_MODULE_0__.civilizationsData,\n    ..._civs_data2__WEBPACK_IMPORTED_MODULE_1__.civilizationsData2,\n    ..._civs_data3__WEBPACK_IMPORTED_MODULE_2__.civilizationsData3,\n    ...civilizationsDat4\n};\n// Para obtener una lista de todas las civilizaciones para el listado\nconst getAllCivilizations = ()=>{\n    return Object.values(allCivilizationsData).map((civ)=>({\n            id: civ.id,\n            name: civ.name,\n            region: civ.region,\n            specialty: civ.specialty,\n            image: civ.image || \"/assets/\".concat(civ.id, \".webp\"),\n            difficulty: civ.difficulty,\n            playstyle: civ.playstyle,\n            categories: civ.categories || []\n        }));\n};\n// Función para filtrar civilizaciones por región\nconst getCivilizationsByRegion = (region)=>{\n    return Object.values(allCivilizationsData).filter((civ)=>civ.region.toLowerCase() === region.toLowerCase()).map((civ)=>({\n            id: civ.id,\n            name: civ.name,\n            specialty: civ.specialty,\n            image: civ.image || \"/assets/\".concat(civ.id, \".webp\")\n        }));\n};\n// Para obtener los datos de una civilización específica\nconst getCivilization = (id)=>{\n    return allCivilizationsData[id];\n};\n// Obtener las regiones disponibles\nconst getAvailableRegions = ()=>{\n    const regions = new Set();\n    Object.values(allCivilizationsData).forEach((civ)=>regions.add(civ.region));\n    return Array.from(regions).sort();\n};\n// Exportar tipos para uso en componentes\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEvY2l2aWxpemF0aW9ucy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnRDtBQUNFO0FBQ0E7QUFLbEQsNkNBQTZDO0FBQzdDLE1BQU1HLHVCQUF5RDtJQUM3RCxHQUFHSCx5REFBaUI7SUFDcEIsR0FBR0MsMkRBQWtCO0lBQ3JCLEdBQUdDLDJEQUFrQjtJQUNyQixHQUFHRSxpQkFBaUI7QUFDdEI7QUFFQSxxRUFBcUU7QUFDOUQsTUFBTUMsc0JBQXNCO0lBQ2pDLE9BQU9DLE9BQU9DLE1BQU0sQ0FBQ0osc0JBQXNCSyxHQUFHLENBQUMsQ0FBQ0MsTUFBUztZQUN2REMsSUFBSUQsSUFBSUMsRUFBRTtZQUNWQyxNQUFNRixJQUFJRSxJQUFJO1lBQ2RDLFFBQVFILElBQUlHLE1BQU07WUFDbEJDLFdBQVdKLElBQUlJLFNBQVM7WUFDeEJDLE9BQU9MLElBQUlLLEtBQUssSUFBSSxXQUFrQixPQUFQTCxJQUFJQyxFQUFFLEVBQUM7WUFDdENLLFlBQVlOLElBQUlNLFVBQVU7WUFDMUJDLFdBQVdQLElBQUlPLFNBQVM7WUFDeEJDLFlBQVlSLElBQUlRLFVBQVUsSUFBSSxFQUFFO1FBQ2xDO0FBQ0YsRUFBRTtBQUVGLGlEQUFpRDtBQUMxQyxNQUFNQywyQkFBMkIsQ0FBQ047SUFDdkMsT0FBT04sT0FBT0MsTUFBTSxDQUFDSixzQkFDbEJnQixNQUFNLENBQUMsQ0FBQ1YsTUFBUUEsSUFBSUcsTUFBTSxDQUFDUSxXQUFXLE9BQU9SLE9BQU9RLFdBQVcsSUFDL0RaLEdBQUcsQ0FBQyxDQUFDQyxNQUFTO1lBQ2JDLElBQUlELElBQUlDLEVBQUU7WUFDVkMsTUFBTUYsSUFBSUUsSUFBSTtZQUNkRSxXQUFXSixJQUFJSSxTQUFTO1lBQ3hCQyxPQUFPTCxJQUFJSyxLQUFLLElBQUksV0FBa0IsT0FBUEwsSUFBSUMsRUFBRSxFQUFDO1FBQ3hDO0FBQ0osRUFBRTtBQUVGLHdEQUF3RDtBQUNqRCxNQUFNVyxrQkFBa0IsQ0FBQ1g7SUFDOUIsT0FBT1Asb0JBQW9CLENBQUNPLEdBQUc7QUFDakMsRUFBRTtBQUVGLG1DQUFtQztBQUM1QixNQUFNWSxzQkFBc0I7SUFDakMsTUFBTUMsVUFBVSxJQUFJQztJQUNwQmxCLE9BQU9DLE1BQU0sQ0FBQ0osc0JBQXNCc0IsT0FBTyxDQUFDLENBQUNoQixNQUFRYyxRQUFRRyxHQUFHLENBQUNqQixJQUFJRyxNQUFNO0lBQzNFLE9BQU9lLE1BQU1DLElBQUksQ0FBQ0wsU0FBU00sSUFBSTtBQUNqQyxFQUFFO0FBRUYseUNBQXlDO0FBQ2pCIiwic291cmNlcyI6WyIvVXNlcnMvbWFydGlubmF2YXJyby9Eb2N1bWVudHMvYW9lMmRlLXdpa2kvZGF0YS9jaXZpbGl6YXRpb25zL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNpdmlsaXphdGlvbnNEYXRhIH0gZnJvbSBcIi4vY2l2cy1kYXRhXCI7XG5pbXBvcnQgeyBjaXZpbGl6YXRpb25zRGF0YTIgfSBmcm9tIFwiLi9jaXZzLWRhdGEyXCI7XG5pbXBvcnQgeyBjaXZpbGl6YXRpb25zRGF0YTMgfSBmcm9tIFwiLi9jaXZzLWRhdGEzXCI7XG5pbXBvcnQgeyBjaXZpbGl6YXRpb25zRGF0YTQgfSBmcm9tIFwiLi9jaXZzLWRhdGE0XCI7XG5cbmltcG9ydCB0eXBlIHsgQ2l2aWxpemF0aW9uRGF0YSB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbi8vIENvbWJpbmFyIHRvZG9zIGxvcyBkYXRvcyBkZSBjaXZpbGl6YWNpb25lc1xuY29uc3QgYWxsQ2l2aWxpemF0aW9uc0RhdGE6IFJlY29yZDxzdHJpbmcsIENpdmlsaXphdGlvbkRhdGE+ID0ge1xuICAuLi5jaXZpbGl6YXRpb25zRGF0YSxcbiAgLi4uY2l2aWxpemF0aW9uc0RhdGEyLFxuICAuLi5jaXZpbGl6YXRpb25zRGF0YTMsXG4gIC4uLmNpdmlsaXphdGlvbnNEYXQ0LFxufTtcblxuLy8gUGFyYSBvYnRlbmVyIHVuYSBsaXN0YSBkZSB0b2RhcyBsYXMgY2l2aWxpemFjaW9uZXMgcGFyYSBlbCBsaXN0YWRvXG5leHBvcnQgY29uc3QgZ2V0QWxsQ2l2aWxpemF0aW9ucyA9ICgpID0+IHtcbiAgcmV0dXJuIE9iamVjdC52YWx1ZXMoYWxsQ2l2aWxpemF0aW9uc0RhdGEpLm1hcCgoY2l2KSA9PiAoe1xuICAgIGlkOiBjaXYuaWQsXG4gICAgbmFtZTogY2l2Lm5hbWUsXG4gICAgcmVnaW9uOiBjaXYucmVnaW9uLFxuICAgIHNwZWNpYWx0eTogY2l2LnNwZWNpYWx0eSxcbiAgICBpbWFnZTogY2l2LmltYWdlIHx8IGAvYXNzZXRzLyR7Y2l2LmlkfS53ZWJwYCxcbiAgICBkaWZmaWN1bHR5OiBjaXYuZGlmZmljdWx0eSxcbiAgICBwbGF5c3R5bGU6IGNpdi5wbGF5c3R5bGUsXG4gICAgY2F0ZWdvcmllczogY2l2LmNhdGVnb3JpZXMgfHwgW10sIC8vIEluY2x1aXIgbGFzIGNhdGVnb3LDrWFzXG4gIH0pKTtcbn07XG5cbi8vIEZ1bmNpw7NuIHBhcmEgZmlsdHJhciBjaXZpbGl6YWNpb25lcyBwb3IgcmVnacOzblxuZXhwb3J0IGNvbnN0IGdldENpdmlsaXphdGlvbnNCeVJlZ2lvbiA9IChyZWdpb246IHN0cmluZykgPT4ge1xuICByZXR1cm4gT2JqZWN0LnZhbHVlcyhhbGxDaXZpbGl6YXRpb25zRGF0YSlcbiAgICAuZmlsdGVyKChjaXYpID0+IGNpdi5yZWdpb24udG9Mb3dlckNhc2UoKSA9PT0gcmVnaW9uLnRvTG93ZXJDYXNlKCkpXG4gICAgLm1hcCgoY2l2KSA9PiAoe1xuICAgICAgaWQ6IGNpdi5pZCxcbiAgICAgIG5hbWU6IGNpdi5uYW1lLFxuICAgICAgc3BlY2lhbHR5OiBjaXYuc3BlY2lhbHR5LFxuICAgICAgaW1hZ2U6IGNpdi5pbWFnZSB8fCBgL2Fzc2V0cy8ke2Npdi5pZH0ud2VicGAsXG4gICAgfSkpO1xufTtcblxuLy8gUGFyYSBvYnRlbmVyIGxvcyBkYXRvcyBkZSB1bmEgY2l2aWxpemFjacOzbiBlc3BlY8OtZmljYVxuZXhwb3J0IGNvbnN0IGdldENpdmlsaXphdGlvbiA9IChpZDogc3RyaW5nKTogQ2l2aWxpemF0aW9uRGF0YSB8IHVuZGVmaW5lZCA9PiB7XG4gIHJldHVybiBhbGxDaXZpbGl6YXRpb25zRGF0YVtpZF07XG59O1xuXG4vLyBPYnRlbmVyIGxhcyByZWdpb25lcyBkaXNwb25pYmxlc1xuZXhwb3J0IGNvbnN0IGdldEF2YWlsYWJsZVJlZ2lvbnMgPSAoKTogc3RyaW5nW10gPT4ge1xuICBjb25zdCByZWdpb25zID0gbmV3IFNldDxzdHJpbmc+KCk7XG4gIE9iamVjdC52YWx1ZXMoYWxsQ2l2aWxpemF0aW9uc0RhdGEpLmZvckVhY2goKGNpdikgPT4gcmVnaW9ucy5hZGQoY2l2LnJlZ2lvbikpO1xuICByZXR1cm4gQXJyYXkuZnJvbShyZWdpb25zKS5zb3J0KCk7XG59O1xuXG4vLyBFeHBvcnRhciB0aXBvcyBwYXJhIHVzbyBlbiBjb21wb25lbnRlc1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbiJdLCJuYW1lcyI6WyJjaXZpbGl6YXRpb25zRGF0YSIsImNpdmlsaXphdGlvbnNEYXRhMiIsImNpdmlsaXphdGlvbnNEYXRhMyIsImFsbENpdmlsaXphdGlvbnNEYXRhIiwiY2l2aWxpemF0aW9uc0RhdDQiLCJnZXRBbGxDaXZpbGl6YXRpb25zIiwiT2JqZWN0IiwidmFsdWVzIiwibWFwIiwiY2l2IiwiaWQiLCJuYW1lIiwicmVnaW9uIiwic3BlY2lhbHR5IiwiaW1hZ2UiLCJkaWZmaWN1bHR5IiwicGxheXN0eWxlIiwiY2F0ZWdvcmllcyIsImdldENpdmlsaXphdGlvbnNCeVJlZ2lvbiIsImZpbHRlciIsInRvTG93ZXJDYXNlIiwiZ2V0Q2l2aWxpemF0aW9uIiwiZ2V0QXZhaWxhYmxlUmVnaW9ucyIsInJlZ2lvbnMiLCJTZXQiLCJmb3JFYWNoIiwiYWRkIiwiQXJyYXkiLCJmcm9tIiwic29ydCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data/civilizations/index.ts\n"));

/***/ })

});